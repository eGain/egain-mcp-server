{
  "dxt_version": "0.1",
  "name": "egain-mcp",
  "version": "0.2.1",
  "description": "",
  "long_description": "Knowledge Portal Manager APIs: ### License\n  The following licenses are required to use the Knowledge Access APIs:\n  * If the user is an agent, then the *Knowledge + AI* license is required.\n  * If the user is a customer, the *Self-Service* and *Advanced Self-Service* licenses must be available.\n### API Resource Limits\nThe following Resources have predefined limits for specific access attributes for Enterprise use.\n\n| Resource | Attribute | Enterprise\n| ---------------- | ---------------------------- | ----------\n| Article Reference Limits |Number of attachments used in any article | 50\n|  |Number of custom attributes in an article | 15\n|  |Number of publish views used in an article version | 20\n| Topic Reference Limits |User-defined topics in a department| 50000\n|  |Depth of topics  | 20\n|  |Topics at any level | 2500\n|  |Number of custom attributes in a topic | 15\n| Portal Reference Limits | Tag categories in a portal | 15\n|  |Topics to be included in a portal | 2500\n|  |Number of articles to display in announcements | 25\n|  |Maximum related articles in portal setting | 100\n|  |Usage links and link groups setup for a portal | 25\n    \n      \n",
  "author": {
    "name": "Speakeasy"
  },
  "server": {
    "type": "node",
    "entry_point": "./bin/mcp-server.js",
    "mcp_config": {
      "command": "node",
      "args": [
        "${__dirname}/bin/mcp-server.js",
        "start",
        "--api-domain",
        "${user_config.api_domain}",
        "--access-token",
        "${user_config.access_token}"
      ]
    }
  },
  "display_name": "Egain Mcp",
  "tools": [
    {
      "name": "get-article",
      "description": "Get Article by ID\n\nGet Article by ID\n\n## Prerequisites\n- Requires a valid portal ID. If you don't have the portal ID, first call 'get-portals' to get available portals.\n- Portal ID format: 2-4 letter prefix + dash + 4-15 digits (e.g., \"EB-123456789\")\n- Requires a valid article ID. Article ID format: 2-4 letter prefix + dash + 4-15 digits (e.g., \"PROD-2996\")\n\n## Overview\nThe Get Article by ID API allows a user to retrieve a specific article using its ID. Additional article attributes and contextual views can be specified in the query parameters.\n\nThis API returns structured authoring attributes of Issue, Environment, Cause and Confidence Level when the following conditions are met:\n- The \"Allow Structured Authoring\" setting is enabled at the partition/department level\n- The \"Use Structured Authoring\" flag is set on the article type\n"
    },
    {
      "name": "get-announcements",
      "description": "Get Announcement Articles\n\nGet Announcements\n\n## Prerequisites\n- Requires a valid portal ID. If you don't have the portal ID, first call 'get-portals' to get available portals.\n- Portal ID format: 2-4 letter prefix + dash + 4-15 digits (e.g., \"EB-123456789\")\n\n## Overview\nThe Get Announcements API allows a user to retrieve all announcement articles for a specific portal. Announcements are special articles that are prominently displayed to users and typically contain important updates, news, or notifications.\n\nThis API returns announcement articles with their full content, metadata, and any associated attachments or links.\n"
    },
    {
      "name": "get-popular-articles",
      "description": "Get Popular Articles\n\nGet Popular Articles\n\n## Prerequisites\n- Requires a valid portal ID. If you don't have the portal ID, first call 'get-portals' to get available portals.\n- Portal ID format: 2-4 letter prefix + dash + 4-15 digits (e.g., \"EB-123456789\")\n\n## Overview\nThe Popular Articles API allows a user to retrieve the most popular articles from a specific portal. Popular articles are typically determined by user engagement metrics such as views, ratings, or usage frequency.\n\nThis API returns a list of popular articles with their metadata, allowing users to discover the most relevant and frequently accessed content within the portal.\n"
    },
    {
      "name": "get-portals",
      "description": "Get All Portals Accessible To User\n\n## Overview\n  The Get All Portals Accessible to User API allows a user to fetch all portals accessible to user across all department.\n  * If no access tags are specified for a portal, then any user can access the portal.\n  * If access tags are specified for a portal, users with a user profile that allows access have access to the portal. For users with multiple user profiles, the user profile that allows access does not need to be the active user profile.\n  * All the global users(partition) cannot be assigned user profiles; their access is limited to portals without access restrictions.\n  * The only articles returned are associated to an Article type when the parameter, “Include in browse on portals” is set to \"Yes\".\n  * When the \"shortUrlTemplate\" query parameter is provided, the API filters accessible portals according to the specified language and template name. Portal Short URL specific to to the \"shortUrlTemplate\" query parameter value is returned in the response.\n  * When there is no short URL available for a specific language, the API returns a portal object with an empty \"shortURL\" field.\n"
    },
    {
      "name": "make-suggestion",
      "description": "Make a Suggestion\n\nMake a Suggestion\n\n## Prerequisites\n- Requires a valid portal ID. If you don't have the portal ID, first call 'get-portals' to get available portals.\n- Portal ID format: 2-4 letter prefix + dash + 4-15 digits (e.g., \"EB-123456789\")\n\n## Overview\nThe Make a Suggestion API allows users to create an Article Suggestion from within a knowledge portal. This enables users to submit feedback, request new articles, or suggest improvements to existing content.\n\nUsers can submit suggestions with details about what they're looking for, which helps content creators understand user needs and improve the knowledge base.\n"
    }
  ],
  "prompts": [],
  "keywords": [
      "egain",
      "mcp",
      "knowledge",
      "portal",
      "manager",
      "apis",
      "license"
    ],
  "user_config": {
      "api_domain": {
        "type": "string",
        "title": "API_DOMAIN",
        "description": " ",
        "required": false,
        "default": "api.egain.cloud"
      },
      "access_token": {
        "type": "string",
        "title": "accessToken",
        "description": "The accessToken to use for the request",
        "required": true,
        "sensitive": true
      }
    }
}