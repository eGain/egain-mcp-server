/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { queryRetrieve } from "../../funcs/queryRetrieve.js";
import { PostPortalIDRetrieveRequest$zodSchema } from "../../models/postportalidretrieveop.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: PostPortalIDRetrieveRequest$zodSchema,
};

export const tool$queryRetrieve: ToolDefinition<typeof args> = {
  name: "query-retrieve",
  description: `Retrieve Chunks

Retrieve Chunks

## Prerequisites
- **Requires a valid portal ID** (required parameter). If you don't have the portal ID, first call 'get-portals' to get available portals.
- Portal ID format: 2-4 letter prefix + dash + 4-15 digits (e.g., "EB-123456789")

## Overview
The Retrieve API enables enterprises to directly access relevant content chunks from their organizational knowledge sources. It is designed for scenarios where developers want granular control over retrieved information, such as powering custom search, analytics, or retrieval-augmented generation (RAG) pipelines.

In addition to raw chunk retrieval, the API can return **Certified Answers** if it meets the 'Certified Answer' threshold score. Responses include relevance scores, metadata, and references to maintain transparency and flexibility.

By leveraging the Retrieve API, organizations can build tailored experiences while retaining confidence in the source material.
`,
  annotations: {
    "destructiveHint": false,
    "idempotentHint": false,
    "openWorldHint": false,
    "readOnlyHint": false,
  },
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await queryRetrieve(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
