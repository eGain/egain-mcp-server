/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { getArticle } from "../../funcs/getArticle.js";
import { GetArticleByIdRequest$zodSchema } from "../../models/getarticlebyidop.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: GetArticleByIdRequest$zodSchema,
};

export const tool$getArticle: ToolDefinition<typeof args> = {
  name: "get-article",
  description: `Get Article by ID

Get Article by ID

## Prerequisites
- Requires a valid portal ID. If you don't have the portal ID, first call 'get-portals' to get available portals.
- Portal ID format: 2-4 letter prefix + dash + 4-15 digits (e.g., "EB-123456789")
- Requires a valid article ID. Article ID format: 2-4 letter prefix + dash + 4-15 digits (e.g., "PROD-2996")

## Overview
The Get Article by ID API allows a user to retrieve a specific article using its ID. Additional article attributes and contextual views can be specified in the query parameters.

This API returns structured authoring attributes of Issue, Environment, Cause and Confidence Level when the following conditions are met:
- The "Allow Structured Authoring" setting is enabled at the partition/department level
- The "Use Structured Authoring" flag is set on the article type
`,
  annotations: {
    "destructiveHint": false,
    "idempotentHint": false,
    "openWorldHint": false,
    "readOnlyHint": true,
  },
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await getArticle(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
