/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { AnswersRequest, AnswersRequest$zodSchema } from "./answersrequest.js";
import {
  AnswersResponse,
  AnswersResponse$zodSchema,
} from "./answersresponse.js";
import {
  LanguageCodeParameter,
  LanguageCodeParameter$zodSchema,
} from "./languagecodeparameter.js";

export type PostPortalIDAnswersRequest = {
  q: string;
  portalID: string;
  dollarFilterUserProfileID?: string | undefined;
  Dollar_lang?: LanguageCodeParameter | undefined;
  dollarFilterTags?: { [k: string]: Array<string> } | undefined;
  dollarFilterTopicIds?: Array<string> | undefined;
  AnswersRequest?: AnswersRequest | undefined;
};

export const PostPortalIDAnswersRequest$zodSchema: z.ZodType<
  PostPortalIDAnswersRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  AnswersRequest: AnswersRequest$zodSchema.optional(),
  Dollar_lang: LanguageCodeParameter$zodSchema.default("en-US"),
  dollarFilterTags: z.record(z.array(z.string())).describe(
    "An object where each key is a **Category Tag ID** (numeric string),  \n"
      + "and each value is an array of **Tag IDs** for that category.\n"
      + "",
  ).optional(),
  dollarFilterTopicIds: z.array(z.string()).optional(),
  dollarFilterUserProfileID: z.string().optional(),
  portalID: z.string().describe(
    "The ID of the portal being accessed.<br><br>A portal ID is composed of a 2-4 letter prefix, followed by a dash and 4-15 digits.",
  ),
  q: z.string().describe("The search query string."),
});

export type PostPortalIDAnswersResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  AnswersResponse?: AnswersResponse | undefined;
};

export const PostPortalIDAnswersResponse$zodSchema: z.ZodType<
  PostPortalIDAnswersResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  AnswersResponse: AnswersResponse$zodSchema.optional(),
  ContentType: z.string(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
});
