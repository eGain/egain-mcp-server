/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { PublishView, PublishView$zodSchema } from "./publishview.js";
import { TagCategory, TagCategory$zodSchema } from "./tagcategory.js";

export type AccessTags = { tagCategory?: Array<TagCategory> | undefined };

export const AccessTags$zodSchema: z.ZodType<
  AccessTags,
  z.ZodTypeDef,
  unknown
> = z.object({
  tagCategory: z.array(TagCategory$zodSchema).optional(),
});

export type Filters = { tagCategory?: Array<TagCategory> | undefined };

export const Filters$zodSchema: z.ZodType<Filters, z.ZodTypeDef, unknown> = z
  .object({
    tagCategory: z.array(TagCategory$zodSchema).optional(),
  });

export type PublishViews = { publishView?: Array<PublishView> | undefined };

export const PublishViews$zodSchema: z.ZodType<
  PublishViews,
  z.ZodTypeDef,
  unknown
> = z.object({
  publishView: z.array(PublishView$zodSchema).optional(),
});

/**
 * Personalization allows the filtering of search results and controls the access to articles and article editions.
 */
export type Personalization = {
  accessTags?: AccessTags | undefined;
  filters?: Filters | undefined;
  publishViews?: PublishViews | undefined;
};

export const Personalization$zodSchema: z.ZodType<
  Personalization,
  z.ZodTypeDef,
  unknown
> = z.object({
  accessTags: z.lazy(() => AccessTags$zodSchema).optional(),
  filters: z.lazy(() => Filters$zodSchema).optional(),
  publishViews: z.lazy(() => PublishViews$zodSchema).optional(),
}).describe(
  "Personalization allows the filtering of search results and controls the access to articles and article editions.",
);
