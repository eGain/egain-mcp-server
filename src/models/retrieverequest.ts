/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * The channel where the query originated, e.g., directly from the portal or via a custom integration.
 */
export const RetrieveRequestType$zodSchema = z.enum([
  "portal",
  "custom",
]).describe(
  "The channel where the query originated, e.g., directly from the portal or via a custom integration.",
);

export type RetrieveRequestType = z.infer<typeof RetrieveRequestType$zodSchema>;

export type RetrieveRequestChannel = {
  type?: RetrieveRequestType | undefined;
  name?: string | undefined;
};

export const RetrieveRequestChannel$zodSchema: z.ZodType<
  RetrieveRequestChannel,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string().optional(),
  type: RetrieveRequestType$zodSchema.default("custom"),
});

export type RetrieveRequest = {
  channel?: RetrieveRequestChannel | undefined;
  eventId?: string | undefined;
  sessionId?: string | undefined;
};

export const RetrieveRequest$zodSchema: z.ZodType<
  RetrieveRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  channel: z.lazy(() => RetrieveRequestChannel$zodSchema).optional(),
  eventId: z.string().optional(),
  sessionId: z.string().optional(),
});
