/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * The channel where the query originated, e.g., directly from the portal or via a custom integration.
 */
export const AnswersRequestType$zodSchema = z.enum([
  "portal",
  "custom",
]).describe(
  "The channel where the query originated, e.g., directly from the portal or via a custom integration.",
);

export type AnswersRequestType = z.infer<typeof AnswersRequestType$zodSchema>;

export type AnswersRequestChannel = {
  type?: AnswersRequestType | undefined;
  name?: string | undefined;
};

export const AnswersRequestChannel$zodSchema: z.ZodType<
  AnswersRequestChannel,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string().default("portal"),
  type: AnswersRequestType$zodSchema.default("portal"),
});

/**
 * Additional contextual metadata that enriches the query, providing the LLM with relevant details for tailoring the response.
 */
export type Context = {
  userContext?: string | undefined;
  pageContext?: string | undefined;
  companyContext?: string | undefined;
};

export const Context$zodSchema: z.ZodType<Context, z.ZodTypeDef, unknown> = z
  .object({
    companyContext: z.string().optional(),
    pageContext: z.string().optional(),
    userContext: z.string().optional(),
  }).describe(
    "Additional contextual metadata that enriches the query, providing the LLM with relevant details for tailoring the response.",
  );

export type AnswersRequest = {
  channel?: AnswersRequestChannel | undefined;
  context?: Context | undefined;
  eventId: string;
  sessionId: string;
};

export const AnswersRequest$zodSchema: z.ZodType<
  AnswersRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  channel: z.lazy(() => AnswersRequestChannel$zodSchema).optional(),
  context: z.lazy(() => Context$zodSchema).optional(),
  eventId: z.string(),
  sessionId: z.string(),
});
