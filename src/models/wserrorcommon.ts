/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type Detail = { key: string; value?: string | undefined };

export const Detail$zodSchema: z.ZodType<Detail, z.ZodTypeDef, unknown> = z
  .object({
    key: z.string(),
    value: z.string().optional(),
  });

/**
 * Error Schema
 */
export type WSErrorCommon = {
  code: string;
  developerMessage: string;
  details?: Array<Detail> | undefined;
  userMessage?: string | undefined;
};

export const WSErrorCommon$zodSchema: z.ZodType<
  WSErrorCommon,
  z.ZodTypeDef,
  unknown
> = z.object({
  code: z.string(),
  details: z.array(z.lazy(() => Detail$zodSchema)).optional(),
  developerMessage: z.string(),
  userMessage: z.string().optional(),
}).describe("Error Schema");
