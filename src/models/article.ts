/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  ArticleAttachment,
  ArticleAttachment$zodSchema,
} from "./articleattachment.js";
import { ArticleType, ArticleType$zodSchema } from "./articletype.js";
import { BookmarkStatus, BookmarkStatus$zodSchema } from "./bookmarkstatus.js";
import {
  ComplianceForArticle,
  ComplianceForArticle$zodSchema,
} from "./complianceforarticle.js";
import { CreatedBy, CreatedBy$zodSchema } from "./createdby.js";
import {
  CustomAttribute,
  CustomAttribute$zodSchema,
} from "./customattribute.js";
import { Edition, Edition$zodSchema } from "./edition.js";
import { LanguageCode, LanguageCode$zodSchema } from "./languagecode.js";
import { Link, Link$zodSchema } from "./link.js";
import { ModifiedBy, ModifiedBy$zodSchema } from "./modifiedby.js";
import { OwnedBy, OwnedBy$zodSchema } from "./ownedby.js";
import {
  Personalization,
  Personalization$zodSchema,
} from "./personalization.js";
import {
  StructuredAuthoringFields,
  StructuredAuthoringFields$zodSchema,
} from "./structuredauthoringfields.js";
import {
  TopicBreadcrumb,
  TopicBreadcrumb$zodSchema,
} from "./topicbreadcrumb.js";
import { Workflow, Workflow$zodSchema } from "./workflow.js";

/**
 * Success
 */
export type Article = {
  id: string;
  additionalInfo?: string | undefined;
  articleMacro?: string | undefined;
  articleType?: ArticleType | undefined;
  articleKeywords?: string | undefined;
  articleSummary?: string | undefined;
  attachments?: Array<ArticleAttachment> | undefined;
  availabilityDate?: string | undefined;
  availableEditions?: Array<Edition> | undefined;
  averageRating?: number | undefined;
  content?: string | undefined;
  contentText?: string | undefined;
  createdBy: CreatedBy;
  modifiedBy?: ModifiedBy | undefined;
  ownedBy?: OwnedBy | undefined;
  createdDate?: string | undefined;
  customAttributes?: Array<CustomAttribute> | undefined;
  departmentID?: string | undefined;
  description?: string | undefined;
  expirationDate?: string | undefined;
  includeInGenAI?: boolean | undefined;
  isSubscribed?: boolean | undefined;
  modifiedDate?: string | undefined;
  languageCode?: LanguageCode | undefined;
  link?: Link | undefined;
  imageURL?: string | undefined;
  name: string;
  structuredAuthoringFields?: StructuredAuthoringFields | undefined;
  articleState?: string | undefined;
  timesRated?: number | undefined;
  topicBreadcrumb: Array<TopicBreadcrumb>;
  versionId?: string | undefined;
  workflow?: Workflow | undefined;
  compliance?: ComplianceForArticle | undefined;
  personalization?: Personalization | undefined;
  bookmarkStatus?: BookmarkStatus | undefined;
};

export const Article$zodSchema: z.ZodType<Article, z.ZodTypeDef, unknown> = z
  .object({
    additionalInfo: z.string().optional(),
    articleKeywords: z.string().optional(),
    articleMacro: z.string().optional(),
    articleState: z.string().optional(),
    articleSummary: z.string().optional(),
    articleType: ArticleType$zodSchema.optional(),
    attachments: z.array(ArticleAttachment$zodSchema).optional(),
    availabilityDate: z.string().optional(),
    availableEditions: z.array(Edition$zodSchema).optional(),
    averageRating: z.number().optional(),
    bookmarkStatus: BookmarkStatus$zodSchema.optional(),
    compliance: ComplianceForArticle$zodSchema.optional(),
    content: z.string().optional(),
    contentText: z.string().optional(),
    createdBy: CreatedBy$zodSchema,
    createdDate: z.string().optional(),
    customAttributes: z.array(CustomAttribute$zodSchema).optional(),
    departmentID: z.string().optional(),
    description: z.string().optional(),
    expirationDate: z.string().optional(),
    id: z.string(),
    imageURL: z.string().optional(),
    includeInGenAI: z.boolean().optional(),
    isSubscribed: z.boolean().optional(),
    languageCode: LanguageCode$zodSchema.optional(),
    link: Link$zodSchema.optional(),
    modifiedBy: ModifiedBy$zodSchema.optional(),
    modifiedDate: z.string().optional(),
    name: z.string(),
    ownedBy: OwnedBy$zodSchema.optional(),
    personalization: Personalization$zodSchema.optional(),
    structuredAuthoringFields: StructuredAuthoringFields$zodSchema.optional(),
    timesRated: z.number().int().optional(),
    topicBreadcrumb: z.array(TopicBreadcrumb$zodSchema),
    versionId: z.string().optional(),
    workflow: Workflow$zodSchema.optional(),
  }).describe("Success");
