/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { AcceptLanguage, AcceptLanguage$zodSchema } from "./acceptlanguage.js";
import {
  CreateSuggestion,
  CreateSuggestion$zodSchema,
} from "./createsuggestion.js";
import { WSErrorCommon, WSErrorCommon$zodSchema } from "./wserrorcommon.js";

export type MakeSuggestionRequest = {
  acceptLanguage?: AcceptLanguage | undefined;
  portalID: string;
  CreateSuggestion?: CreateSuggestion | undefined;
};

export const MakeSuggestionRequest$zodSchema: z.ZodType<
  MakeSuggestionRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  CreateSuggestion: CreateSuggestion$zodSchema.optional(),
  acceptLanguage: AcceptLanguage$zodSchema.default("en-US"),
  portalID: z.string().describe(
    "The ID of the portal being accessed.<br><br>A portal ID is composed of a 2-4 letter prefix, followed by a dash and 4-15 digits.",
  ),
});

export type MakeSuggestionResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  WSErrorCommon?: WSErrorCommon | undefined;
};

export const MakeSuggestionResponse$zodSchema: z.ZodType<
  MakeSuggestionResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
  WSErrorCommon: WSErrorCommon$zodSchema.optional(),
});
